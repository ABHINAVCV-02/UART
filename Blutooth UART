#include <stdint.h>
#include "stm32f4xx.h" // Include your specific ARM microcontroller header file

#define UART_TX_PIN GPIO_Pin_9
#define UART_RX_PIN GPIO_Pin_10
#define UART_PORT GPIOA
#define UART_PERIPHERAL USART1

void UART_Init(uint32_t baudrate) {
    GPIO_InitTypeDef GPIO_InitStruct;
    USART_InitTypeDef USART_InitStruct;

    // Enable clock for GPIO and UART peripherals
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);

    // Configure UART pins
    GPIO_InitStruct.GPIO_Pin = UART_TX_PIN | UART_RX_PIN;
    GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
    GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
    GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
    GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(UART_PORT, &GPIO_InitStruct);

    // Connect the TX and RX pins to their alternate function (UART)
    GPIO_PinAFConfig(UART_PORT, GPIO_PinSource9, GPIO_AF_USART1);
    GPIO_PinAFConfig(UART_PORT, GPIO_PinSource10, GPIO_AF_USART1);

    // Configure UART
    USART_InitStruct.USART_BaudRate = baudrate;
    USART_InitStruct.USART_WordLength = USART_WordLength_8b;
    USART_InitStruct.USART_StopBits = USART_StopBits_1;
    USART_InitStruct.USART_Parity = USART_Parity_No;
    USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
    USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_Init(UART_PERIPHERAL, &USART_InitStruct);

    // Enable UART
    USART_Cmd(UART_PERIPHERAL, ENABLE);
}

void UART_SendChar(char ch) {
    // Wait until transmit buffer is empty
    while (!(UART_PERIPHERAL->SR & USART_FLAG_TXE));
    // Send character
    UART_PERIPHERAL->DR = (ch & 0xFF);
}

char UART_ReceiveChar(void) {
    // Wait until receive buffer is not empty
    while (!(UART_PERIPHERAL->SR & USART_FLAG_RXNE));
    // Read character from DR register
    return (char)(UART_PERIPHERAL->DR & 0xFF);
}

void Bluetooth_Init(uint32_t baudrate) {
    UART_Init(baudrate);
}

void Bluetooth_SendString(const char* str) {
    // Loop until end of string
    while (*str != '\0') {
        UART_SendChar(*str);
        str++;
    }
}

int main(void) {
    // Initialize Bluetooth module with baud rate 9600
    Bluetooth_Init(9600);

    while (1) {
        // Receive character from Bluetooth module
        char receivedChar = UART_ReceiveChar();
        
        // Echo back received character
        UART_SendChar(receivedChar);
    }
}
